id: Microsoft.CodeAnalysis.Host.IPersistentStorage
yaml: api\Microsoft.CodeAnalysis.Host.IPersistentStorage.yaml
href: api\Microsoft.CodeAnalysis.Host.IPersistentStorage
name:
  CSharp: IPersistentStorage
qualifiedName:
  CSharp: IPersistentStorage
type: Interface
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:\roslyn\
    sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
  path: src\Workspaces\Core\Portable\Workspace\Host\PersistentStorage\IPersistentStorage.cs
  startLine: 9
syntax:
  content:
    CSharp: public interface IPersistentStorage
items:
- id: Microsoft.CodeAnalysis.Host.IPersistentStorage.ReadStreamAsync(System.String,System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Host.IPersistentStorage.yaml
  href: api\Microsoft.CodeAnalysis.Host.IPersistentStorage
  name:
    CSharp: ReadStreamAsync
  qualifiedName:
    CSharp: ReadStreamAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Workspace\Host\PersistentStorage\IPersistentStorage.cs
    startLine: 11
  syntax:
    content:
      CSharp: Task<Stream> ReadStreamAsync(string name, CancellationToken cancellationToken = default (CancellationToken));
    parameters:
    - id: name
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        href: System.Threading.Tasks
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.Host.IPersistentStorage.ReadStreamAsync(Microsoft.CodeAnalysis.Project,System.String,System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Host.IPersistentStorage.yaml
  href: api\Microsoft.CodeAnalysis.Host.IPersistentStorage
  name:
    CSharp: ReadStreamAsync
  qualifiedName:
    CSharp: ReadStreamAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Workspace\Host\PersistentStorage\IPersistentStorage.cs
    startLine: 12
  syntax:
    content:
      CSharp: Task<Stream> ReadStreamAsync(Project project, string name, CancellationToken cancellationToken = default (CancellationToken));
    parameters:
    - id: project
      type:
        id: Project
        href: C:\roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Project.cs
    - id: name
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        href: System.Threading.Tasks
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.Host.IPersistentStorage.ReadStreamAsync(Microsoft.CodeAnalysis.Document,System.String,System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Host.IPersistentStorage.yaml
  href: api\Microsoft.CodeAnalysis.Host.IPersistentStorage
  name:
    CSharp: ReadStreamAsync
  qualifiedName:
    CSharp: ReadStreamAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Workspace\Host\PersistentStorage\IPersistentStorage.cs
    startLine: 13
  syntax:
    content:
      CSharp: Task<Stream> ReadStreamAsync(Document document, string name, CancellationToken cancellationToken = default (CancellationToken));
    parameters:
    - id: document
      type:
        id: Document
        href: C:\roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Document.cs
    - id: name
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        href: System.Threading.Tasks
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.Host.IPersistentStorage.WriteStreamAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Host.IPersistentStorage.yaml
  href: api\Microsoft.CodeAnalysis.Host.IPersistentStorage
  name:
    CSharp: WriteStreamAsync
  qualifiedName:
    CSharp: WriteStreamAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Workspace\Host\PersistentStorage\IPersistentStorage.cs
    startLine: 15
  syntax:
    content:
      CSharp: Task<bool> WriteStreamAsync(string name, Stream stream, CancellationToken cancellationToken = default (CancellationToken));
    parameters:
    - id: name
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
    - id: stream
      type:
        id: System.IO.Stream
        href: System.IO
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        href: System.Threading.Tasks
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.Host.IPersistentStorage.WriteStreamAsync(Microsoft.CodeAnalysis.Project,System.String,System.IO.Stream,System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Host.IPersistentStorage.yaml
  href: api\Microsoft.CodeAnalysis.Host.IPersistentStorage
  name:
    CSharp: WriteStreamAsync
  qualifiedName:
    CSharp: WriteStreamAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Workspace\Host\PersistentStorage\IPersistentStorage.cs
    startLine: 16
  syntax:
    content:
      CSharp: Task<bool> WriteStreamAsync(Project project, string name, Stream stream, CancellationToken cancellationToken = default (CancellationToken));
    parameters:
    - id: project
      type:
        id: Project
        href: C:\roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Project.cs
    - id: name
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
    - id: stream
      type:
        id: System.IO.Stream
        href: System.IO
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        href: System.Threading.Tasks
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.Host.IPersistentStorage.WriteStreamAsync(Microsoft.CodeAnalysis.Document,System.String,System.IO.Stream,System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Host.IPersistentStorage.yaml
  href: api\Microsoft.CodeAnalysis.Host.IPersistentStorage
  name:
    CSharp: WriteStreamAsync
  qualifiedName:
    CSharp: WriteStreamAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Workspace\Host\PersistentStorage\IPersistentStorage.cs
    startLine: 17
  syntax:
    content:
      CSharp: Task<bool> WriteStreamAsync(Document document, string name, Stream stream, CancellationToken cancellationToken = default (CancellationToken));
    parameters:
    - id: document
      type:
        id: Document
        href: C:\roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Document.cs
    - id: name
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
    - id: stream
      type:
        id: System.IO.Stream
        href: System.IO
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        href: System.Threading.Tasks
        isExternal: true
    return:
      id: Task
