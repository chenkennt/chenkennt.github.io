id: Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions
yaml: api\Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions.yaml
href: api\Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions
name:
  CSharp: SymbolEditorExtensions
qualifiedName:
  CSharp: SymbolEditorExtensions
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:\roslyn\
    sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
  path: src\Workspaces\Core\Portable\Editing\SymbolEditorExtensions.cs
  startLine: 12
syntax:
  content:
    CSharp: public static class SymbolEditorExtensions
inheritance:
- id: System.Object
  href: System.Runtime
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions.GetBaseOrInterfaceDeclarationReferenceAsync(Microsoft.CodeAnalysis.Editing.SymbolEditor,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ITypeSymbol,System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions
  name:
    CSharp: GetBaseOrInterfaceDeclarationReferenceAsync
  qualifiedName:
    CSharp: GetBaseOrInterfaceDeclarationReferenceAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SymbolEditorExtensions.cs
    startLine: 17
  summary: >+
    Gets the reference to the declaration of the base or interface type as part of the symbol's declaration.

  syntax:
    content:
      CSharp: public static async Task<SyntaxNode> GetBaseOrInterfaceDeclarationReferenceAsync(this SymbolEditor editor, ISymbol symbol, ITypeSymbol baseOrInterfaceType, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: editor
      type:
        id: SymbolEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs
    - id: symbol
      type:
        id: ISymbol
        href: C:\roslyn\src\Compilers\Core\Portable\Symbols\ISymbol.cs
    - id: baseOrInterfaceType
      type:
        id: ITypeSymbol
        href: C:\roslyn\src\Compilers\Core\Portable\Symbols\ITypeSymbol.cs
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        href: System.Threading.Tasks
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions.SetBaseTypeAsync(Microsoft.CodeAnalysis.Editing.SymbolEditor,Microsoft.CodeAnalysis.INamedTypeSymbol,System.Func{Microsoft.CodeAnalysis.Editing.SyntaxGenerator,Microsoft.CodeAnalysis.SyntaxNode},System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions
  name:
    CSharp: SetBaseTypeAsync
  qualifiedName:
    CSharp: SetBaseTypeAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SymbolEditorExtensions.cs
    startLine: 55
  summary: >+
    Changes the base type of the symbol.

  syntax:
    content:
      CSharp: public static async Task<ISymbol> SetBaseTypeAsync(this SymbolEditor editor, INamedTypeSymbol symbol, Func<SyntaxGenerator, SyntaxNode> getNewBaseType, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: editor
      type:
        id: SymbolEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs
    - id: symbol
      type:
        id: INamedTypeSymbol
        href: C:\roslyn\src\Compilers\Core\Portable\Symbols\INamedTypeSymbol.cs
    - id: getNewBaseType
      type:
        id: System.Func{Microsoft.CodeAnalysis.Editing.SyntaxGenerator,Microsoft.CodeAnalysis.SyntaxNode}
        href: System.Runtime
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        href: System.Threading.Tasks
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions.SetBaseTypeAsync(Microsoft.CodeAnalysis.Editing.SymbolEditor,Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.ITypeSymbol,System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions
  name:
    CSharp: SetBaseTypeAsync
  qualifiedName:
    CSharp: SetBaseTypeAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SymbolEditorExtensions.cs
    startLine: 91
  summary: >+
    Changes the base type of the symbol.

  syntax:
    content:
      CSharp: public static Task<ISymbol> SetBaseTypeAsync(this SymbolEditor editor, INamedTypeSymbol symbol, ITypeSymbol newBaseType, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: editor
      type:
        id: SymbolEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs
    - id: symbol
      type:
        id: INamedTypeSymbol
        href: C:\roslyn\src\Compilers\Core\Portable\Symbols\INamedTypeSymbol.cs
    - id: newBaseType
      type:
        id: ITypeSymbol
        href: C:\roslyn\src\Compilers\Core\Portable\Symbols\ITypeSymbol.cs
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        href: System.Threading.Tasks
        isExternal: true
    return:
      id: Task
