id: Microsoft.CodeAnalysis.SyntaxWalkerDepth
yaml: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth.yaml
href: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth
name:
  CSharp: SyntaxWalkerDepth
qualifiedName:
  CSharp: SyntaxWalkerDepth
type: Enum
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:\roslyn\
    sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
  path: src\Compilers\Core\Portable\Syntax\SyntaxWalkerDepth.cs
  startLine: 9
summary: >+
  enum to specify how deep walker should decent into

syntax:
  content:
    CSharp: public enum SyntaxWalkerDepth
inheritance:
- id: System.Object
  href: System.Runtime
  isExternal: true
- id: System.ValueType
  href: System.Runtime
  isExternal: true
- id: System.Enum
  href: System.Runtime
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.SyntaxWalkerDepth.Node
  yaml: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth
  name:
    CSharp: Node
  qualifiedName:
    CSharp: Node
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Compilers\Core\Portable\Syntax\SyntaxWalkerDepth.cs
    startLine: 14
  summary: >+
    descend into only nodes

  syntax:
    content:
      CSharp: Node = 0
- id: Microsoft.CodeAnalysis.SyntaxWalkerDepth.Token
  yaml: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth
  name:
    CSharp: Token
  qualifiedName:
    CSharp: Token
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Compilers\Core\Portable\Syntax\SyntaxWalkerDepth.cs
    startLine: 19
  summary: >+
    descend into nodes and tokens

  syntax:
    content:
      CSharp: Token = 1
- id: Microsoft.CodeAnalysis.SyntaxWalkerDepth.Trivia
  yaml: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth
  name:
    CSharp: Trivia
  qualifiedName:
    CSharp: Trivia
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Compilers\Core\Portable\Syntax\SyntaxWalkerDepth.cs
    startLine: 24
  summary: >+
    descend into nodes, tokens and trivia

  syntax:
    content:
      CSharp: Trivia = 2
- id: Microsoft.CodeAnalysis.SyntaxWalkerDepth.StructuredTrivia
  yaml: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth
  name:
    CSharp: StructuredTrivia
  qualifiedName:
    CSharp: StructuredTrivia
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Compilers\Core\Portable\Syntax\SyntaxWalkerDepth.cs
    startLine: 29
  summary: >+
    descend into everything

  syntax:
    content:
      CSharp: StructuredTrivia = 3
