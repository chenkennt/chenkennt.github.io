items:
- uid: Microsoft.CodeAnalysis.Emit.EmitBaseline
  href: Microsoft.CodeAnalysis.Emit.EmitBaseline.yml
  name: EmitBaseline
  fullName: Microsoft.CodeAnalysis.Emit.EmitBaseline
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: v1.0-12-gef085ea
    path: src/Compilers/Core/Portable/Emit/EditAndContinue/EmitBaseline.cs
    startLine: 54
  summary: >-
    Represents a module from a previous compilation. Used in Edit and Continue

    to emit the differences in a subsequent compilation.
  syntax:
    content:
      CSharp: public sealed class EmitBaseline
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  id: Microsoft.CodeAnalysis.Emit.EmitBaseline
  children:
  - Microsoft.CodeAnalysis.Emit.EmitBaseline.CreateInitialBaseline(Microsoft.CodeAnalysis.ModuleMetadata,System.Func{System.Reflection.Metadata.MethodDefinitionHandle,Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation})
  - Microsoft.CodeAnalysis.Emit.EmitBaseline.OriginalMetadata
- uid: Microsoft.CodeAnalysis.Emit.EmitBaseline.CreateInitialBaseline(Microsoft.CodeAnalysis.ModuleMetadata,System.Func{System.Reflection.Metadata.MethodDefinitionHandle,Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation})
  href: Microsoft.CodeAnalysis.Emit.EmitBaseline.yml
  name: CreateInitialBaseline(ModuleMetadata, Func<MethodDefinitionHandle, EditAndContinueMethodDebugInformation>)
  fullName: Microsoft.CodeAnalysis.Emit.EmitBaseline.CreateInitialBaseline(Microsoft.CodeAnalysis.ModuleMetadata, System.Func<System.Reflection.Metadata.MethodDefinitionHandle, Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EditAndContinue/EmitBaseline.cs
    startLine: 83
  summary: >-
    Creates an [Microsoft.CodeAnalysis.Emit.EmitBaseline](Microsoft.CodeAnalysis.Emit.EmitBaseline.yml) from the metadata of the module before editing

    and from a function that maps from a method to an array of local names.
  syntax:
    content:
      CSharp: public static EmitBaseline CreateInitialBaseline(ModuleMetadata module, Func<MethodDefinitionHandle, EditAndContinueMethodDebugInformation> debugInformationProvider)
    parameters:
    - id: module
      type:
        id: Microsoft.CodeAnalysis.ModuleMetadata
        name: ModuleMetadata
        href: Microsoft.CodeAnalysis.ModuleMetadata
      description: The metadata of the module before editing.
    - id: debugInformationProvider
      type:
        id: System.Func{System.Reflection.Metadata.MethodDefinitionHandle,Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation}
        name: System.Func{System.Reflection.Metadata.MethodDefinitionHandle,Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation}
        isExternal: true
      description: A function that for a method handle returns Edit and Continue debug information emitted by the compiler into the PDB.
    return:
      id: EmitBaseline
      description: An [Microsoft.CodeAnalysis.Emit.EmitBaseline](Microsoft.CodeAnalysis.Emit.EmitBaseline.yml) for the module.
  id: Microsoft.CodeAnalysis.Emit.EmitBaseline.CreateInitialBaseline(Microsoft.CodeAnalysis.ModuleMetadata,System.Func{System.Reflection.Metadata.MethodDefinitionHandle,Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation})
- uid: Microsoft.CodeAnalysis.Emit.EmitBaseline.OriginalMetadata
  href: Microsoft.CodeAnalysis.Emit.EmitBaseline.yml
  name: OriginalMetadata
  fullName: Microsoft.CodeAnalysis.Emit.EmitBaseline.OriginalMetadata
  type: Field
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EditAndContinue/EmitBaseline.cs
    startLine: 135
  summary: The original metadata of the module.
  syntax:
    content:
      CSharp: OriginalMetadata
  id: Microsoft.CodeAnalysis.Emit.EmitBaseline.OriginalMetadata
