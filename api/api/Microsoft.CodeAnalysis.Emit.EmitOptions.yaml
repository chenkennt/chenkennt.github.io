id: Microsoft.CodeAnalysis.Emit.EmitOptions
href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
name:
  CSharp: EmitOptions
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    description: v1.0-12-gef085ea
  path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
  startLine: 10
summary: Represents compilation emit options.
syntax:
  content:
    CSharp: public sealed class EmitOptions
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: EmitMetadataOnly
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly
  type: Property
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 17
  summary: True to emit an assembly excluding executable code such as method bodies.
  syntax:
    content:
      CSharp: public bool EmitMetadataOnly { get; private set; }
    parameters:
    - id: EmitMetadataOnly
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.TolerateErrors
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: TolerateErrors
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.TolerateErrors
  type: Property
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 22
  summary: Tolerate errors, producing a PE stream and a success result even in the presence of (some) errors.
  syntax:
    content:
      CSharp: public bool TolerateErrors { get; private set; }
    parameters:
    - id: TolerateErrors
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.IncludePrivateMembers
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: IncludePrivateMembers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.IncludePrivateMembers
  type: Property
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 31
  summary: >-
    Unless set (private) members that don't affect the language semantics of the resulting assembly will be excluded

    when emitting with [Microsoft.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly](Microsoft.CodeAnalysis.Emit.EmitOptions.yaml) on.
  syntax:
    content:
      CSharp: public bool IncludePrivateMembers { get; private set; }
    parameters:
    - id: IncludePrivateMembers
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.SubsystemVersion
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: SubsystemVersion
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.SubsystemVersion
  type: Property
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 36
  summary: Subsystem version
  syntax:
    content:
      CSharp: public SubsystemVersion SubsystemVersion { get; private set; }
    parameters:
    - id: SubsystemVersion
      type:
        id: Microsoft.CodeAnalysis.SubsystemVersion
        name: SubsystemVersion
        href: Microsoft.CodeAnalysis.SubsystemVersion
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.FileAlignment
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: FileAlignment
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.FileAlignment
  type: Property
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 45
  summary: Specifies the size of sections in the output file.
  syntax:
    content:
      CSharp: public int FileAlignment { get; private set; }
    parameters:
    - id: FileAlignment
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.HighEntropyVirtualAddressSpace
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: HighEntropyVirtualAddressSpace
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.HighEntropyVirtualAddressSpace
  type: Property
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 50
  summary: True to enable high entropy virtual address space for the output binary.
  syntax:
    content:
      CSharp: public bool HighEntropyVirtualAddressSpace { get; private set; }
    parameters:
    - id: HighEntropyVirtualAddressSpace
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.BaseAddress
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: BaseAddress
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.BaseAddress
  type: Property
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 55
  summary: Specifies the preferred base address at which to load the output DLL.
  syntax:
    content:
      CSharp: public ulong BaseAddress { get; private set; }
    parameters:
    - id: BaseAddress
      type:
        id: System.UInt64
        name: System.UInt64
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.DebugInformationFormat
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: DebugInformationFormat
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.DebugInformationFormat
  type: Property
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 60
  summary: Debug information format.
  syntax:
    content:
      CSharp: public DebugInformationFormat DebugInformationFormat { get; private set; }
    parameters:
    - id: DebugInformationFormat
      type:
        id: Microsoft.CodeAnalysis.Emit.DebugInformationFormat
        name: DebugInformationFormat
        href: Microsoft.CodeAnalysis.Emit.DebugInformationFormat.yaml
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.OutputNameOverride
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: OutputNameOverride
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.OutputNameOverride
  type: Property
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 73
  summary: Assembly name override - file name and extension. If not specified the the compilation name is used.
  syntax:
    content:
      CSharp: public string OutputNameOverride { get; private set; }
    parameters:
    - id: OutputNameOverride
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.PdbFilePath
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: PdbFilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.PdbFilePath
  type: Property
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 81
  summary: The name of the PDB file to be embedded in the PE image, or null to use the default.
  syntax:
    content:
      CSharp: public string PdbFilePath { get; private set; }
    parameters:
    - id: PdbFilePath
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.RuntimeMetadataVersion
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: RuntimeMetadataVersion
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.RuntimeMetadataVersion
  type: Property
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 86
  summary: Runtime metadata version.
  syntax:
    content:
      CSharp: public string RuntimeMetadataVersion { get; private set; }
    parameters:
    - id: RuntimeMetadataVersion
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.#ctor(System.Boolean,Microsoft.CodeAnalysis.Emit.DebugInformationFormat,System.String,System.String,System.Int32,System.UInt64,System.Boolean,Microsoft.CodeAnalysis.SubsystemVersion,System.String,System.Boolean,System.Boolean)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: EmitOptions(bool, DebugInformationFormat, string, string, int, ulong, bool, SubsystemVersion, string, bool, bool)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.EmitOptions(bool, Microsoft.CodeAnalysis.Emit.DebugInformationFormat, string, string, int, ulong, bool, Microsoft.CodeAnalysis.SubsystemVersion, string, bool, bool)
  type: Constructor
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 88
  syntax:
    content:
      CSharp: public EmitOptions(bool metadataOnly = false, DebugInformationFormat debugInformationFormat = 0, string pdbFilePath = null, string outputNameOverride = null, int fileAlignment = 0, ulong baseAddress = 0, bool highEntropyVirtualAddressSpace = false, SubsystemVersion subsystemVersion = default (SubsystemVersion), string runtimeMetadataVersion = null, bool tolerateErrors = false, bool includePrivateMembers = false)
    parameters:
    - id: metadataOnly
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    - id: debugInformationFormat
      type:
        id: Microsoft.CodeAnalysis.Emit.DebugInformationFormat
        name: DebugInformationFormat
        href: Microsoft.CodeAnalysis.Emit.DebugInformationFormat.yaml
    - id: pdbFilePath
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: outputNameOverride
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: fileAlignment
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: baseAddress
      type:
        id: System.UInt64
        name: System.UInt64
        isExternal: true
    - id: highEntropyVirtualAddressSpace
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    - id: subsystemVersion
      type:
        id: Microsoft.CodeAnalysis.SubsystemVersion
        name: SubsystemVersion
        href: Microsoft.CodeAnalysis.SubsystemVersion
    - id: runtimeMetadataVersion
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: tolerateErrors
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    - id: includePrivateMembers
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(System.Object)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: Equals(object)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 129
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(Microsoft.CodeAnalysis.Emit.EmitOptions)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: Equals(EmitOptions)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(Microsoft.CodeAnalysis.Emit.EmitOptions)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 134
  syntax:
    content:
      CSharp: public bool Equals(EmitOptions other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.Emit.EmitOptions
        name: EmitOptions
        href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.GetHashCode
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: GetHashCode()
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 155
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.op_Equality(Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.Emit.EmitOptions)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: operator ==(EmitOptions, EmitOptions)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.operator ==(Microsoft.CodeAnalysis.Emit.EmitOptions, Microsoft.CodeAnalysis.Emit.EmitOptions)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 170
  syntax:
    content:
      CSharp: public static bool operator ==(EmitOptions left, EmitOptions right) { return object.Equals(left, right); }
    parameters:
    - id: left
      type:
        id: Microsoft.CodeAnalysis.Emit.EmitOptions
        name: EmitOptions
        href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
    - id: right
      type:
        id: Microsoft.CodeAnalysis.Emit.EmitOptions
        name: EmitOptions
        href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.op_Inequality(Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.Emit.EmitOptions)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: operator !=(EmitOptions, EmitOptions)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.operator !=(Microsoft.CodeAnalysis.Emit.EmitOptions, Microsoft.CodeAnalysis.Emit.EmitOptions)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 175
  syntax:
    content:
      CSharp: public static bool operator !=(EmitOptions left, EmitOptions right) { return !object.Equals(left, right); }
    parameters:
    - id: left
      type:
        id: Microsoft.CodeAnalysis.Emit.EmitOptions
        name: EmitOptions
        href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
    - id: right
      type:
        id: Microsoft.CodeAnalysis.Emit.EmitOptions
        name: EmitOptions
        href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithEmitMetadataOnly(System.Boolean)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: WithEmitMetadataOnly(bool)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithEmitMetadataOnly(bool)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 223
  syntax:
    content:
      CSharp: public EmitOptions WithEmitMetadataOnly(bool value)
    parameters:
    - id: value
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithPdbFilePath(System.String)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: WithPdbFilePath(string)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithPdbFilePath(string)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 233
  syntax:
    content:
      CSharp: public EmitOptions WithPdbFilePath(string path)
    parameters:
    - id: path
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithOutputNameOverride(System.String)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: WithOutputNameOverride(string)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithOutputNameOverride(string)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 243
  syntax:
    content:
      CSharp: public EmitOptions WithOutputNameOverride(string outputName)
    parameters:
    - id: outputName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithDebugInformationFormat(Microsoft.CodeAnalysis.Emit.DebugInformationFormat)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: WithDebugInformationFormat(DebugInformationFormat)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithDebugInformationFormat(Microsoft.CodeAnalysis.Emit.DebugInformationFormat)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 253
  syntax:
    content:
      CSharp: public EmitOptions WithDebugInformationFormat(DebugInformationFormat format)
    parameters:
    - id: format
      type:
        id: Microsoft.CodeAnalysis.Emit.DebugInformationFormat
        name: DebugInformationFormat
        href: Microsoft.CodeAnalysis.Emit.DebugInformationFormat.yaml
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithFileAlignment(System.Int32)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: WithFileAlignment(int)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithFileAlignment(int)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 267
  summary: Sets the byte alignment for portable executable file sections.
  syntax:
    content:
      CSharp: public EmitOptions WithFileAlignment(int value)
    parameters:
    - id: value
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: 'Can be one of the following values: 0, 512, 1024, 2048, 4096, 8192'
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithBaseAddress(System.UInt64)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: WithBaseAddress(ulong)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithBaseAddress(ulong)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 277
  syntax:
    content:
      CSharp: public EmitOptions WithBaseAddress(ulong value)
    parameters:
    - id: value
      type:
        id: System.UInt64
        name: System.UInt64
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithHighEntropyVirtualAddressSpace(System.Boolean)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: WithHighEntropyVirtualAddressSpace(bool)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithHighEntropyVirtualAddressSpace(bool)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 287
  syntax:
    content:
      CSharp: public EmitOptions WithHighEntropyVirtualAddressSpace(bool value)
    parameters:
    - id: value
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithSubsystemVersion(Microsoft.CodeAnalysis.SubsystemVersion)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: WithSubsystemVersion(SubsystemVersion)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithSubsystemVersion(Microsoft.CodeAnalysis.SubsystemVersion)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 297
  syntax:
    content:
      CSharp: public EmitOptions WithSubsystemVersion(SubsystemVersion subsystemVersion)
    parameters:
    - id: subsystemVersion
      type:
        id: Microsoft.CodeAnalysis.SubsystemVersion
        name: SubsystemVersion
        href: Microsoft.CodeAnalysis.SubsystemVersion
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithRuntimeMetadataVersion(System.String)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: WithRuntimeMetadataVersion(string)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithRuntimeMetadataVersion(string)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 307
  syntax:
    content:
      CSharp: public EmitOptions WithRuntimeMetadataVersion(string version)
    parameters:
    - id: version
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithTolerateErrors(System.Boolean)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: WithTolerateErrors(bool)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithTolerateErrors(bool)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 317
  syntax:
    content:
      CSharp: public EmitOptions WithTolerateErrors(bool value)
    parameters:
    - id: value
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithIncludePrivateMembers(System.Boolean)
  href: Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  name:
    CSharp: WithIncludePrivateMembers(bool)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithIncludePrivateMembers(bool)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 327
  syntax:
    content:
      CSharp: public EmitOptions WithIncludePrivateMembers(bool value)
    parameters:
    - id: value
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: EmitOptions
