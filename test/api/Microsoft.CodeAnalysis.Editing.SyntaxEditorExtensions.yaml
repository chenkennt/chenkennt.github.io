id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
name:
  CSharp: SyntaxEditorExtensions
qualifiedName:
  CSharp: SyntaxEditorExtensions
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:\roslyn\
    sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
  path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
  startLine: 12
syntax:
  content:
    CSharp: public static class SyntaxEditorExtensions
inheritance:
- id: System.Object
  href: System.Runtime
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetAccessibility(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: SetAccessibility
  qualifiedName:
    CSharp: SetAccessibility
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 14
  syntax:
    content:
      CSharp: public static void SetAccessibility(this SyntaxEditor editor, SyntaxNode declaration, Accessibility accessibility)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: accessibility
      type:
        id: Accessibility
        href: C:\roslyn\src\Compilers\Core\Portable\Symbols\Accessibility.cs
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetModifiers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: SetModifiers
  qualifiedName:
    CSharp: SetModifiers
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 19
  syntax:
    content:
      CSharp: public static void SetModifiers(this SyntaxEditor editor, SyntaxNode declaration, DeclarationModifiers modifiers)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: modifiers
      type:
        id: DeclarationModifiers
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\DeclarationModifiers.cs
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetName(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: SetName
  qualifiedName:
    CSharp: SetName
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 24
  syntax:
    content:
      CSharp: public static void SetName(this SyntaxEditor editor, SyntaxNode declaration, string name)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: name
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: SetType
  qualifiedName:
    CSharp: SetType
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 29
  syntax:
    content:
      CSharp: public static void SetType(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode type)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: type
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeParameters(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{System.String})
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: SetTypeParameters
  qualifiedName:
    CSharp: SetTypeParameters
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 34
  syntax:
    content:
      CSharp: public static void SetTypeParameters(this SyntaxEditor editor, SyntaxNode declaration, IEnumerable<string> typeParameters)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: typeParameters
      type:
        id: System.Collections.Generic.IEnumerable{System.String}
        href: System.Runtime
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeConstraint(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String,Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: SetTypeConstraint
  qualifiedName:
    CSharp: SetTypeConstraint
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 39
  syntax:
    content:
      CSharp: public static void SetTypeConstraint(this SyntaxEditor editor, SyntaxNode declaration, string typeParameterName, SpecialTypeConstraintKind kind, IEnumerable<SyntaxNode> types)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: typeParameterName
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
    - id: kind
      type:
        id: SpecialTypeConstraintKind
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\TypeConstraintKind.cs
    - id: types
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        href: System.Runtime
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetExpression(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: SetExpression
  qualifiedName:
    CSharp: SetExpression
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 44
  syntax:
    content:
      CSharp: public static void SetExpression(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode expression)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: expression
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: SetStatements
  qualifiedName:
    CSharp: SetStatements
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 49
  syntax:
    content:
      CSharp: public static void SetStatements(this SyntaxEditor editor, SyntaxNode declaration, IEnumerable<SyntaxNode> statements)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: statements
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        href: System.Runtime
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetGetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: SetGetAccessorStatements
  qualifiedName:
    CSharp: SetGetAccessorStatements
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 54
  syntax:
    content:
      CSharp: public static void SetGetAccessorStatements(this SyntaxEditor editor, SyntaxNode declaration, IEnumerable<SyntaxNode> statements)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: statements
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        href: System.Runtime
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetSetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: SetSetAccessorStatements
  qualifiedName:
    CSharp: SetSetAccessorStatements
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 59
  syntax:
    content:
      CSharp: public static void SetSetAccessorStatements(this SyntaxEditor editor, SyntaxNode declaration, IEnumerable<SyntaxNode> statements)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: statements
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        href: System.Runtime
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddParameter(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: AddParameter
  qualifiedName:
    CSharp: AddParameter
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 64
  syntax:
    content:
      CSharp: public static void AddParameter(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode parameter)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: parameter
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: AddAttribute
  qualifiedName:
    CSharp: AddAttribute
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 69
  syntax:
    content:
      CSharp: public static void AddAttribute(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode attribute)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: attribute
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddReturnAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: AddReturnAttribute
  qualifiedName:
    CSharp: AddReturnAttribute
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 74
  syntax:
    content:
      CSharp: public static void AddReturnAttribute(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode attribute)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: attribute
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttributeArgument(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: AddAttributeArgument
  qualifiedName:
    CSharp: AddAttributeArgument
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 79
  syntax:
    content:
      CSharp: public static void AddAttributeArgument(this SyntaxEditor editor, SyntaxNode attributeDeclaration, SyntaxNode attributeArgument)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: attributeDeclaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: attributeArgument
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddMember(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: AddMember
  qualifiedName:
    CSharp: AddMember
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 84
  syntax:
    content:
      CSharp: public static void AddMember(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode member)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: member
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertMembers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: InsertMembers
  qualifiedName:
    CSharp: InsertMembers
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 89
  syntax:
    content:
      CSharp: public static void InsertMembers(this SyntaxEditor editor, SyntaxNode declaration, int index, IEnumerable<SyntaxNode> members)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: index
      type:
        id: System.Int32
        href: System.Runtime
        isExternal: true
    - id: members
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        href: System.Runtime
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddInterfaceType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: AddInterfaceType
  qualifiedName:
    CSharp: AddInterfaceType
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 94
  syntax:
    content:
      CSharp: public static void AddInterfaceType(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode interfaceType)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: interfaceType
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddBaseType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  yaml: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yaml
  href: api\Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  name:
    CSharp: AddBaseType
  qualifiedName:
    CSharp: AddBaseType
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: e46ffcafeeb87a2d139b531f48416f783d9fe89d
    path: src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs
    startLine: 99
  syntax:
    content:
      CSharp: public static void AddBaseType(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode baseType)
    parameters:
    - id: editor
      type:
        id: SyntaxEditor
        href: C:\roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditor.cs
    - id: declaration
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    - id: baseType
      type:
        id: SyntaxNode
        href: C:\roslyn\src\Compilers\Core\Portable\Syntax\SyntaxNode.cs
    return:
      id: Void
